address ('address')
WHITE_SPACE (' ')
ADDRESS_LITERAL ('0x1')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
module ('module')
WHITE_SPACE (' ')
IDENTIFIER ('M')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
spec ('spec')
WHITE_SPACE (' ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('main')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
assert ('assert')
WHITE_SPACE (' ')
INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n            ')
let ('let')
WHITE_SPACE (' ')
IDENTIFIER ('a')
: (':')
WHITE_SPACE (' ')
IDENTIFIER ('address')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
ADDRESS_LITERAL ('0x1')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
address ('address')
WHITE_SPACE (' ')
ADDRESS_LITERAL ('0x0')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
module ('module')
WHITE_SPACE (' ')
IDENTIFIER ('M')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
fun ('fun')
WHITE_SPACE (' ')
IDENTIFIER ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
IDENTIFIER ('assert')
( ('(')
INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
INTEGER_LITERAL ('1')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
