<idea-plugin>
    <id>org.move.lang</id>
    <name>Move Language</name>

    <vendor>Dfinance</vendor>

    <description>
        <![CDATA[
            <p>Support for the Move, smart-contract language for the Libra and Dfinance blockchains.</p>

            <p><a href="https://github.com/dfinance/intellij-move">https://github.com/dfinance/intellij-move</a></p>
        ]]>
    </description>

    <change-notes>
        <![CDATA[
            <p>0.9.0</p>
            <ul>
                <li>FEAT: add support for native structs</li>
                <li>FEAT: highlight generic parameters</li>
                <li>FEAT: add generic parameters to completion</li>
                <li>FEAT: add primitive types to completion</li>
                <li>FEAT: "define" name resolution</li>

                <li>FEAT: fix remaining parser spec issues</li>
            </ul>
            <p>0.8.0</p>
            <ul>
                <li>FEAT: autocompletion for names, functions and structs</li>
            </ul>
            <p>0.7.0</p>
            <ul>
                <li>FEAT: add partial support for specs in parser and formatter</li>
                <li>FEAT: add go-to-definition/rename support for consts, structs, functions, type parameters and specs</li>
                <li>BUG: fix lots of indentation problems with formatter</li>
                <li>BUG: parser bugfixes</li>
                <li>INTERNAL: make repo for the plugin public at https://github.com/dfinance/intellij-move</li>
            </ul>
            <p>0.6.0</p>
            <ul>
                <li>Feature: Go-to-definition and rename refactoring for local variables and function params</li>
                <li>Feature: initial "Reformat Code" support</li>
                <li>Feature: create new Move file action</li>
                <li>Feature: add auto-indentation for blocks</li>
                <li>Feature: highlight primitive types as keywords</li>
            </ul>
            <p>0.5.0</p>
            <ul>
                <li>Bug: fix block comments</li>
            </ul>
        ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Move"
                  language="Move"
                  extensions="move"
                  implementationClass="org.move.lang.MoveFileType"
                  fieldName="INSTANCE"/>

        <lang.parserDefinition language="Move"
                               implementationClass="org.move.lang.MoveParserDefinition"/>
<!--        <stubElementTypeHolder class="org.move.lang.MoveElementTypes"/>-->

        <lang.syntaxHighlighter language="Move"
                                implementationClass="org.move.ide.MoveHighlighter"/>
        <lang.commenter language="Move"
                        implementationClass="org.move.ide.MoveCommenter"/>
        <lang.braceMatcher language="Move"
                           implementationClass="org.move.ide.typing.MoveBraceMatcher"/>
        <lang.formatter language="Move"
                        implementationClass="org.move.ide.formatter.MoveFormattingModelBuilder"/>

        <lang.namesValidator language="Move"
                             implementationClass="org.move.ide.refactoring.MoveNamesValidator"/>
        <lang.refactoringSupport language="Move"
                                 implementationClass="org.move.ide.refactoring.MoveRefactoringSupportProvider"/>
        <lang.findUsagesProvider language="Move"
                                 implementationClass="org.move.ide.search.MoveFindUsagesProvider"/>

        <completion.contributor language="Move"
                                implementationClass="org.move.lang.core.completion.CommonCompletionContributor"/>
        <completion.contributor language="Move"
                                implementationClass="org.move.lang.core.completion.KeywordCompletionContributor"/>
        <psi.referenceContributor language="Move"
                                  implementation="org.move.lang.ReferenceContributor"/>
        <annotator language="Move"
                   implementationClass="org.move.ide.annotator.ErrorAnnotator"/>
        <annotator language="Move"
                   implementationClass="org.move.ide.annotator.HighlightingAnnotator"/>
        <configurationType implementation="org.move.movec.CompilerCheckConfigurationType"/>

        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.parameter.FunctionParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.parameter.TypeParameterInfoHandler"/>
        <codeInsight.parameterNameHints language="Move"
                                        implementationClass="org.move.ide.hints.parameter.MoveInlayParameterHintsProvider"/>

        <!--        <stubIndex implementation="org.move.lang.core.stubs.index.MoveNamedElementIndex"/>-->

        <!--        <localInspection language="Move" groupPath="Move" groupName="Naming"-->
        <!--                         displayName="Attempt to override a built-in function"-->
        <!--                         enabledByDefault="true" level="ERROR"-->
        <!--                         implementationClass="org.move.ide.inspections.lints.FunctionNamingInspection"/>-->
        <localInspection language="Move" groupName="Move"
                         displayName="Unresolved reference"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.move.ide.inspections.MoveUnresolvedReferenceInspection"/>

        <!-- Color Settings -->
        <colorSettingsPage implementation="org.move.ide.colors.MoveColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="colors/MoveDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colors/MoveDarcula.xml"/>

        <!-- Movec -->
        <projectConfigurable instance="org.move.movec.project.configurable.MoveProjectConfigurable"
                             displayName="Move"
                             groupId="language"
                             id="language.move"/>

    </extensions>

    <actions>
        <action id="Move.NewMoveFile"
                class="org.move.ide.actions.CreateMoveFileAction"
                text="Move File"
                description="Create new Move file">
            <!--            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>-->
        </action>
    </actions>
</idea-plugin>